{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "mozPipelineMetadata": {
    "expiration_policy": {
      "delete_after_days": 775
    }
  },
  "type": "object",
  "title": "crash",
  "properties": {
    @TELEMETRY_APPLICATION_1_JSON@,
    @TELEMETRY_CLIENTID_1_JSON@,
    @TELEMETRY_CREATIONDATE_1_JSON@,
    @TELEMETRY_ENVIRONMENT_1_JSON@,
    @TELEMETRY_ID_1_JSON@,
    "payload": {
      "type": "object",
      "properties": {
        "crashDate": {
          "type": "string",
          "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "crashId": {
          "type": "string",
          "description": "Optional, ID of the associated crash. Added to schema in bug 1604666."
        },
        "crashTime": {
          "description": "<ISO Date>, time of crash. Per-hour resolution",
          "type": "string"
        },
        "sessionId": {
          "description": "<uuid>, Telemetry ID of crashing session. May be missing for crashes that happen early in startup",
          "type": ["string", "null"]
        },
        "hasCrashEnvironment": {
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "properties": {
            "AvailableSwapMemory": {
              "description": "<size>, Amount of free swap space in bytes. - Under macOS, populated with the contents of\n  sysctl \"vm.swapusage\" :: xsu_avail.\n- Under Linux, populated with /proc/meminfo's SwapFree. - Not available on other platforms.",
              "type": "string"
            },
            "AsyncShutdownTimeout": {
              "description": "<json>, Optional, present when a shutdown blocker failed to respond within a reasonable amount of time",
              "type": "string"
            },
            "AvailablePageFile": {
              "description": "<size>, Windows-only, available paging file in bytes",
              "type": "string"
            },
            "AvailablePhysicalMemory": {
              "description": "<size>, Windows-only, available physical memory in bytes",
              "type": "string"
            },
            "AvailableVirtualMemory": {
              "description": "<size>, Windows-only, available virtual memory in bytes",
              "type": "string"
            },
            "BackgroundTaskName": {
              "description": "<string>, If the app was invoked in background task mode via `--backgroundtask <task name>`, the string \"task name\".",
              "type": "string"
            },
            "BlockedDllList": {
              "description": "<list>, Windows-only, see WindowsDllBlocklist.cpp for details",
              "type": "string"
            },
            "BlocklistInitFailed": {
              "description": "1, Windows-only, present only if the DLL blocklist initialization failed",
              "type": "string"
            },
            "BuildID": {
              "description": "YYYYMMDDHHMMSS",
              "type": "string"
            },
            "ContainsMemoryReport": {
              "description": "1, Optional, if set indicates that the crash had a memory report attached",
              "type": "string"
            },
            "CrashTime": {
              "description": "<time>, Seconds since the Epoch (see also: `payload.crashTime`)",
              "type": "string"
            },
            "DOMFissionEnabled": {
              "description": "<boolean>, Set to 1 when DOM fission is enabled, and subframes are potentially loaded in a separate process.",
              "type": "string"
            },
            "EventLoopNestingLevel": {
              "description": "<levels>, Optional, present only if >0, indicates the nesting level of the event-loop",
              "type": "string"
            },
            "ExperimentalFeatures": {
              "description": "<string>, Comma-separated list of enabled experimental features from about:preferences#experimental.",
              "type": "string"
            },
            "FontName": {
              "description": "<string>, Set before attempting to load a font to help diagnose crashes during loading.",
              "type": "string"
            },
            "GPUProcessLaunchCount": {
              "description": "<integer>, Number of times the GPU process was launched.",
              "type": "string"
            },
            "HeadlessMode": {
              "description": "<boolean>, True if the app was invoked in headless mode via `--headless ...` or `--backgroundtask ...`, false otherwise.",
              "type": "string"
            },
            "IndexedDBShutdownTimeout": {
              "description": "<json>, This annotation is present if IndexedDB shutdown was not finished in time and the browser was crashed instead of waiting for IndexedDB shutdown to finish. The condition that caused the hang is contained in the annotation. The condition is constructed by stringifying status of objects which blocked IndexedDB shutdown. Objects are divided into three groups: FactoryOperations, LiveDatabases and DatabaseMaintenances. Each group is reported separately and contains the number of objects in the group and status of individual objects in the group (duplicit entries are removed): \"GroupName: N (objectStatus1, objectStatus2, ...)\" where N is the number of objects in the group. Status of individual objects is constructed by taking selected object properties. Properties which contain origin strings are anonymized.",
              "type": "string"
            },
            "ipc_channel_error": {
              "description": "<error string>, Optional, contains the string processing error reason for an ipc-based content crash",
              "type": "string"
            },
            "IsGarbageCollecting": {
              "description": "1, Optional, if set indicates that the crash occurred while the garbage collector was running",
              "type": "string"
            },
            "LastInteractionDuration": {
              "description": "How long the user had been inactive in seconds if the user was inactive at crash. The value is not set if the user state was active.",
              "type": "string"
            },
            "LocalStorageShutdownTimeout": {
              "description": "<json>, This annotation is present if LocalStorage shutdown was not finished in time and the browser was crashed instead of waiting for LocalStorage shutdown to finish. The condition that caused the hang is contained in the annotation. The condition is constructed by stringifying status of objects which blocked LocalStorage shutdown. Objects are divided into three groups: PrepareDatastoreOperations, Datastores and LiveDatabases. Each group is reported separately and contains the number of objects in the group and status of individual objects in the group (duplicit entries are removed): \"GroupName: N (objectStatus1, objectStatus2, ...)\" where N is the number of objects in the group. Status of individual objects is constructed by taking selected object properties. Properties which contain origin strings are anonymized.",
              "type": "string"
            },
            "LowCommitSpaceEvents": {
              "description": "<num>, Windows-only, present only if >0, number of low commit space events detected by the available memory tracker",
              "type": "string"
            },
            "LowPhysicalMemoryEvents": {
              "description": "<integer>, Number of times the available memory tracker has detected that free physical memory is running low. This is a Windows-specific annotation.",
              "type": "string"
            },
            "MainThreadRunnableName": {
              "description": "<string>, Name of the currently executing nsIRunnable on the main thread.",
              "type": "string"
            },
            "MemoryErrorCorrection": {
              "description": "<type>, Windows-only, indicates the type of ECC memory in use, see below",
              "type": "string"
            },
            "MozCrashReason": {
              "description": "<reason>, Optional, contains the string passed to MOZ_CRASH()",
              "type": "string"
            },
            "NimbusEnrollments": {
              "description": "Optional, a omma-separated string that specifies the active Nimbus experiments and rollouts, as well as their branches",
              "type": "string"
            },
            "OOMAllocationSize": {
              "description": "<size>, Size of the allocation that caused an OOM",
              "type": "string"
            },
            "PurgeablePhysicalMemory": {
              "description": "<size>, macOS only. Amount of physical memory currently allocated but which may be deallocated by the system in case of memory pressure. Populated from vm_statistics64_data_t::purgeable_count * vm_page_size.",
              "type": "string"
            },
            "ProductID": {
              "description": "{ec8030f7-c20a-464f-9b0e-13a3a9e97384}",
              "type": "string"
            },
            "ProductName": {
              "description": "Firefox",
              "type": "string"
            },
            "ProfilerChildShutdownPhase": {
              "description": "<string>, When a child process shuts down, this describes if the profiler is running, and the point the profiler shutdown sequence has reached.",
              "type": "string"
            },
            "QuotaManagerShutdownTimeout": {
              "description": "<string>, This annotation is present if the quota manager shutdown (resp. the shutdown of the quota manager clients) was not finished in time and the browser was crashed instead of waiting for the shutdown to finish. The status of objects which were blocking completion of the shutdown when reaching the timeout is contained in the annotation.\nIn the case of IndexedDB, objects are divided into three groups: FactoryOperations, LiveDatabases and DatabaseMaintenances.\nIn the case of LocalStorage, objects are divided into three groups: PrepareDatastoreOperations, Datastores and LiveDatabases.\nIn the case of Cache API, objects are in one group only: Managers.\nEach group is reported separately and contains the number of objects in the group and the status of individual objects in the group (duplicate entries are removed): \"GroupName: N (objectStatus1, objectStatus2, ...)\" where N is the number of objects in the group.\nThe status of individual objects is constructed by taking selected object properties. Properties which contain origin strings are anonymized.\nIn addition, intermediate steps are recorded for change events after shutdown started. These include the time difference and the type of object.",
              "type": "string"
            },
            "ReleaseChannel": {
              "description": "<channel>",
              "type": "string"
            },
            "RemoteType": {
              "description": "<type>, Optional, type of content process, see below for a list of types",
              "type": "string"
            },
            "SecondsSinceLastCrash": {
              "description": "<duration>, Seconds elapsed since the last crash occurred",
              "type": "string"
            },
            "ShutdownProgress": {
              "description": "<phase>, Optional, contains a string describing the shutdown phase in which the crash occurred",
              "type": "string"
            },
            "ShutdownReason": {
              "description": "Optional, contains a string describing the reason the crash occurred",
              "type": "string"
            },
            "StartupCrash": {
              "description": "1, Optional, if set indicates that Firefox crashed during startup",
              "type": "string"
            },
            "SystemMemoryUsePercentage": {
              "description": "<percentage>, Windows-only, percent of memory in use",
              "type": "string"
            },
            "TelemetrySessionId": {
              "description": "Should not be in any pings, left in only for backwards compatibility - see `payload.sessionId` instead",
              "type": "string"
            },
            "TextureUsage": {
              "description": "<usage>, Optional, usage of texture memory in bytes",
              "type": "string"
            },
            "TotalPageFile": {
              "description": "<size>, Windows-only, paging file in use expressed in bytes",
              "type": "string"
            },
            "TotalPhysicalMemory": {
              "description": "<size>, Windows-only, physical memory in use expressed in bytes",
              "type": "string"
            },
            "TotalVirtualMemory": {
              "description": "<size>, Windows-only, virtual memory in use expressed in bytes",
              "type": "string"
            },
            "UptimeTS": {
              "description": "<duration>, Seconds since Firefox was started, this can have a fractional component",
              "type": "string"
            },
            "User32BeforeBlocklist": {
              "description": "1, Windows-only, present only if user32.dll was loaded before the DLL blocklist has been initialized",
              "type": "string"
            },
            "UtilityActorsName": {
              "description": "<string>, Comma-separated list of IPC actors name running on this Utility process instance",
              "type": "string"
            },
            "UtilityProcessSandboxingKind": {
              "description": "<integer>, The SandboxingKind passed for this Utility process instance",
              "type": "string"
            },
            "Version": {
              "description": "<version number>",
              "type": "string"
            },
            "WindowsErrorReporting": {
              "description": "<boolean>, Set to 1 if this crash was intercepted via the Windows Error Reporting runtime exception module.",
              "type": "string"
            },
            "WindowsPackageFamilyName": {
              "description": "<string>, If running in a Windows package context, the package family name, per https://docs.microsoft.com/en-us/windows/win32/api/appmodel/nf-appmodel-getcurrentpackagefamilyname.\nThe package family name is only included when it is likely to have been produced by Mozilla: it starts \"Mozilla.\" or \"MozillaCorporation.\".",
              "type": "string"
            }
          }
        },
        "minidumpSha256Hash": {
          "description": "SHA256 hash of the minidump file. Added to schema in bug 1604913.",
          "type": ["null", "string"]
        },
        "processType": {
          "type": "string"
        },
        "stackTraces": {
          "type": ["object", "null"],
          "properties": {
            "crash_info": {
              "type": "object",
              "properties": {
                "address": @TELEMETRY_HEXADDRESS_1_JSON@,
                "crashing_thread": {
                  "type": "integer",
                  "minimum": 0
                },
                "type": {
                  "type": ["string", "null"]
                }
              }
            },
            "main_module": {
              "type": "integer",
              "minimum": 0
            },
            "modules": {
              "type": "array",
              "items" : {
                "type" : "object",
                "properties": {
                  "base_addr": @TELEMETRY_HEXADDRESS_1_JSON@,
                  "end_addr": @TELEMETRY_HEXADDRESS_1_JSON@,
                  "code_id": {
                    "type": "string"
                  },
                  "debug_file": {
                    "type": "string"
                  },
                  "debug_id": {
                    "type": "string"
                  },
                  "filename": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            },
            "unloaded_modules": {
              "description": "List of modules that were loaded in the process but have been unloaded at the time of crash",
              "type": "array",
              "items": {
                "type" : "object",
                "properties": {
                  "base_addr": @TELEMETRY_HEXADDRESS_1_JSON@,
                  "end_addr": @TELEMETRY_HEXADDRESS_1_JSON@,
                  "code_id": {
                    "type": "string"
                  },
                  "filename": {
                    "type": "string"
                  }
                }
              }
            },
            "status": {
              "type": "string"
            },
            "threads": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ip": @TELEMETRY_HEXADDRESS_1_JSON@,
                  "module_index": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "trust": {
                    "type": "string"
                  },
                  "frames": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ip": @TELEMETRY_HEXADDRESS_1_JSON@,
                        "module_index": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "trust": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "version": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1
        }
      },
      "required": [
        "crashDate",
        "metadata"
      ]
    },
    "type": {
      "type": "string",
      "enum": [ "crash" ]
    },
    "version": {
      "type": "number",
      "minimum": 4,
      "maximum": 4
    }
  },
  "required": [
    "type",
    "id",
    "creationDate",
    "version",
    "application",
    "payload"
  ]
}
